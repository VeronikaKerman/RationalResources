@PART[kerbalism-chemicalplant]:BEFORE[RationalResourcesKerbalism]
{
	isStock = True
}

@PART:HAS[#RRConverter[Set],~isStock]:NEEDS[Kerbalism]:FOR[RationalResourcesKerbalism]
{
	// Add processes from stock kerbalism to parts without kerbalism converters.
	// todo: check that parts do not have any kerbalism converter
	@tags ^= :$: _kerbalism
	
	// RRpower = 0.2 -> capacity = 36
	%RRPowerK = #$RRPower$
	@RRPowerK*= 180
	
	MODULE
	{
		name = ProcessController
		resource = _Haber
		title = #KERBALISM_HaberProcess_title//Haber process
		capacity = #$/RRPowerK$
	}
	MODULE
	{
		name = ProcessController
		resource = _WasteIncinerator
		title = Waste incinerator
		capacity = #$/RRPowerK$
	}
	MODULE
	{
		name = ProcessController
		resource = _WasteCompressor
		title = #KERBALISM_WasteCompressor_title//Waste compressor
		capacity = #$/RRPowerK$
	}
	MODULE
	{
		name = ProcessController
		resource = _Anthraquinone
		title = #KERBALISM_AnthraquinoneProcess_title//Anthraquinone process
		capacity = #$/RRPowerK$
	}
	MODULE
	{
		name = ProcessController
		resource = _HydrazineProduction
		title = #KERBALISM_HydrazineProduction_title//Hydrazine production
		capacity = #$/RRPowerK$
	}
	MODULE
	{
		name = ProcessController
		resource = _NitroHydrazine
		title = #KERBALISM_HydrazineProductionN2_title//Hydrazine production N2
		capacity = #$/RRPowerK$
	}
	MODULE
	{
		name = ProcessController
		resource = _MRE
		title = #KERBALISM_MoltenRegolithElectrolysis_title//MRE
		capacity = #$/RRPowerK$
	}
	MODULE
	{
		name = ProcessController
		resource = _SOE
		title = #KERBALISM_SolidOxideElectrolysis_title//SOE
		capacity = #$/RRPowerK$
	}
	MODULE
	{
		name = ProcessController
		resource = _SCO
		title = #KERBALISM_SelectiveCatalyticOxidation_title//SCO
		capacity = #$/RRPowerK$
	}
	
	MODULE
	{
		name = Configure
		title = Chemical Plant
		slots = #$/RRSlots$
		UPGRADES
		{
			UPGRADE
			{
				name__ = Upgrade-Slots
				techRequired__ = electronics
				slots = #$/RRSlots$
				@slots += 1
				// maybe this slot should cost some mass? eh
			}
		}
		SETUP
		{
			name = Haber Process
			desc = #KERBALISM_HaberProcess_desc//Produce <b>Ammonia</b> by <b>Nitrogen</b> fixation.
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _Haber
			}
		}
		SETUP
		{
			name = Waste Incinerator
			desc = #KERBALISM_WasteIncinerator_desc//Produce <b>CarbonDioxide</b> and <b>Water</b> by combustion of <b>Waste</b> with <b>Oxygen</b>. Includes a small exhaust turbine generator. If needed <b>Water</b> will be vented to continue <b>CarbonDioxide</b> extraction.
			tech = precisionEngineering
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _WasteIncinerator
			}
		}
		SETUP
		{
			name = Waste Compressor
			desc = #KERBALISM_WasteCompressor_desc//Compact <b>Waste</b> to the density of <b>shielding material</b>.
			tech = precisionEngineering
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _WasteCompressor
			}
		}
		SETUP
		{
			name = Anthraquinone Process
			desc = #KERBALISM_AnthraquinoneProcess_desc//Synthesize <b>Oxidizer</b> using a redox of <b>Oxygen</b> and <b>Hydrogen</b>.
			tech = advScienceTech
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _Anthraquinone
			}
		}
		SETUP
		{
			name = Hydrazine Production
			desc = #KERBALISM_HydrazineProduction_desc//<b>Oxidizer</b> and <b>Ammonia</b> react to produce <b>MonoPropellant</b>, <b>Oxygen</b> and <b>Water</b>.
			tech = advScienceTech
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _HydrazineProduction
			}
		}
		SETUP
		{
			name = Hydrazine Production (N2 Injection)
			desc = #KERBALISM_HydrazineProductionN2_desc//<b>Oxidizer</b> and <b>Ammonia</b> with <b>Nitrogen</b> injection react to produce <b>MonoPropellant</b> and <b>Oxygen</b>.
			tech = experimentalScience
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _NitroHydrazine
			}
		}
		SETUP
		{
			name = Solid Oxide Electrolysis
			desc = #KERBALISM_SolidOxideElectrolysis_desc//Transform <b>CarbonDioxide</b> into <b>Oxygen</b> and <b>Shielding</b>.
			tech = experimentalScience
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _SOE
			}
		}
		SETUP
		{
			name = Molten Regolith Electrolysis
			desc = #KERBALISM_MoltenRegolithElectrolysis_desc//Extract <b>Oxygen</b>, <b>CarbonDioxide</b> and <b>Shielding</b> out of <b>Ore</b>. If needed <b>CarbonDioxide</b> and/or <b>Shielding</b> will be vented in order to continue the <b>Oxygen</b> extraction.
			tech = advScienceTech
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _MRE
			}
		}
		SETUP
		{
			name = Selective Catalytic Oxidation
			desc = #KERBALISM_SelectiveCatalyticOxidation_desc//<b>Ammonia</b> and <b>Oxygen</b> react with a hydrotalcite-like catalyst to produce <b>Nitrogen</b> and <b>Water</b>.
			tech = experimentalScience
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _SCO
			}
		}
	}

	MODULE:NEEDS[FeatureReliability]
	{
		name = Reliability
		type = ProcessController
		title = #KERBALISM_ChemicalPlant_title//Chemical Plant
		repair = Engineer
		mtbf = 72576000
		extra_cost = 1.0
		extra_mass = 0.2
	}

	!MODULE[ModuleResourceConverter],* {}
	!MODULE[ModuleOverheatDisplay] {}
	!MODULE[ModuleCoreHeat] {}
}

@PART:HAS[#RRConverter[Set]]:NEEDS[Kerbalism]:FOR[RationalResourcesKerbalism]
{
	// Add processes from RR to parts with kerbalism converters.
	// todo: check that parts do have a kerbalism converter
	@RRConverter = isSet

	// RRpower = 0.4 -> capacity = 1
	%RRPowerV = #$RRPower$
	@RRPowerV*= 2.5

	MODULE
	{
		name = ProcessController
		resource = _MRER
		title = Molten Regolith Electrolysis (Rock)
		Tag = Sabe
		capacity = #$/RRPowerV$
	}
	MODULE
	{
		name = ProcessController
		resource = _GlykerolBrew
		title = Glykerol Brewer
		Tag = RR
		capacity = #$/RRPowerV$
	}
	MODULE
	{
		name = ProcessController
		resource = _CarbonExtractor
		title = Carbon Extractor
		Tag = RR
		capacity = #$/RRPowerV$
	}
	MODULE
	{
		name = ProcessController
		resource = _CarbonFuser
		title = Carbon Fuser
		Tag = RR
		capacity = #$/RRPowerV$
	}
	// MODULE
	// {
	//	name = ProcessController
	//	resource = _LeadExtractor
	//	title = KH Lead Extractor
	//	Tag = RR
	//	capacity = #$/RRPowerV$
	// }
	MODULE
	{
		name = ProcessController
		resource = _ECHeatedMetalSmelter
		title = Metal Smelter
		Tag = RR
		capacity = 1
		@capacity *= #$/RRPower$
	}
	
	// = = RR Default Splitters = =
	
	MODULE
	{
		name = ProcessController
		resource = _SplitterAl2O3
		title = Alumina Splitter
		Tag = RR
		capacity = 1
		@capacity *= #$/RRPower$
	}
	MODULE
	{
		name = ProcessController
		resource = _CarbonMonoA
		title = Carbon Monoxide A
		Tag = RR
		capacity = #$/RRPowerV$
	}
	MODULE
	{
		name = ProcessController
		resource = _CarbonMonoB
		title = Carbon Monoxide B
		Tag = RR
		capacity = #$/RRPowerV$
	}
	MODULE
	{
		name = ProcessController
		resource = _SplitterHydrates
		title = Hydrates Splitter
		Tag = RR
		capacity = #$/RRPowerV$
	}
	MODULE
	{
		name = ProcessController
		resource = _SplitterMona
		title = Monazite Splitter
		Tag = RR
		capacity = #$/RRPowerV$
	}
	MODULE
	{
		name = ProcessController
		resource = _SplitterSilica
		title = Silicates Splitter
		Tag = RR
		capacity = #$/RRPowerV$
	}
	MODULE
	{
		name = ProcessController
		resource = _SplitterSpod
		title = Spodumene Splitter
		Tag = RR
		capacity = #$/RRPowerV$
	}
	MODULE
	{
		name = ProcessController
		resource = _SplitterH2O
		title = Water Splitter
		Tag = RR
		capacity = #$/RRPowerV$
	}
	MODULE
	{
		name = ProcessController
		resource = _ECHeatedMetalSmelter
		title = Metal Smelter
		Tag = RR
		capacity = #$/RRPowerV$
	}
	MODULE
	{
		name = ProcessController
		resource = _ECHeatedMetalRemelter
		title = Metal Remelter
		Tag = RR
		capacity = #$/RRPowerV$
	}
	MODULE
	{
		name = ProcessController
		resource = _SabatierRR
		title = Sabatier Process RR
		Tag = RR
		capacity = #$/RRPowerV$
	}
	MODULE
	{
		name = ProcessController
		resource = _SplitterMethane
		title = Methane Pyrolysis
		Tag = RR
		capacity = #$/RRPowerV$
	}


	@MODULE[Configure]
	{

		// = = RR Default Bulk = =

		SETUP
		{
			name = Molten Regolith Electrolysis (Rock)
			desc = Extract <b>Oxygen</b>, <b>CarbonDioxide</b> and <b>Shielding</b> out of <b>Rock</b>.
			tech = advScienceTech
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _MRER
			}
		}
		SETUP
		{
			name = Carbon Extractor
			desc = Extract pure <b>Carbon</b> out of <b>Ore</b>.
			tech = advScienceTech
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _CarbonExtractor
			}
		}
		SETUP
		{
			name = Carbon Fuser
			desc = Fuse <b>Carbon</b> and <b>Oxygen</b> into <b>CarbonDioxide</b>.
			tech = advScienceTech
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _CarbonFuser
			}
		}
		SETUP
		{
			name = Carbon Monoxide A
			desc = Produce <b>CarbonMonoxide</b> and <b>Oxygen</b> from <b>CarbonDioxide</b>.
			tech = advScienceTech
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _CarbonMonoA
			}
		}
		SETUP
		{
			name = Carbon Monoxide B
			desc = Produce <b>CarbonMonoxide</b> and <b>Hydrogen</b> from <b>Carbon</b> and <b>Water</b>.
			tech = advScienceTech
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _CarbonMonoB
			}
		}
		SETUP
		{
			name = Glykerol Brewer
			desc = Create <b>Glykerol</b> from <b>Water</b> and <b>Carbon</b>.
			tech = advScienceTech
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _GlykerolBrew
			}
		}
		// SETUP
		// {
			// name = Lead Extractor
			// desc = Extract <b>Lead</b> from <b>MetallicOre</b>, primarily for use by KerbalHealth.
			// tech = advScienceTech
			// MODULE
			// {
				// type = ProcessController
				// id_field = resource
				// id_value = _LeadExtractor
			// }
		// }
		SETUP
		{
			name = Metals Smelter
			desc = Smelt <b>Metals</b> by heating powdered <b>MetallicOre</b> and reducing it using <b>Hydrogen</b> gas.
			tech = advScienceTech
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _ECHeatedMetalSmelter
			}
		}
		SETUP
		{
			name = Metals Remelter
			desc = Recycle <b>ScrapMetal</b> into <b>Metals</b>.
			tech = advScienceTech
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _ECHeatedMetalRemelter
			}
		}
		SETUP
		{
			name = Sabatier Process RR
			desc = <b>Hydrogen</b> and <b>CarbonDioxide</b> react with a nickel catalyst to produce <b>Water</b> and <b>Methane</b>.

			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _SabatierRR
			}
		}
		
		// = = RR Default Splitters = =
		
		SETUP
		{
			name = Splitter (Alumina)
			desc = Extract <b>Aluminium</b> and <b>Oxygen</b> out of <b>Alumina</b> in a energy-intensive high-temperature electrolytic process.
			tech = advScienceTech
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _SplitterAl2O3
			}
		}
		SETUP
		{
			name = Splitter (Hydrates)
			desc = Bake out <b>Water</b>, <b>ArgonGas</b>, <b>Oxygen</b> and <b>XenonGas</b> out of <b>Hydrates</b>, leaving dry <b>MetallicOre</b> behind.
			tech = advScienceTech
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _SplitterHydrates
			}
		}
		SETUP
		{
			name = Splitter (Monazite)
			desc = Electrolyze molten <b>Monazite</b> at high temperatures to obtain <b>RareMetals</b> with <b>Oxygen</b> and <b>Phosphorus</b> byproducts.
			tech = advScienceTech
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _SplitterMona
			}
		}
		SETUP
		{
			name = Splitter (Silicates)
			desc = With enough electricity, molten <b>Silicates</b> separate into <b>Silicon</b> and <b>Oxygen</b>.
			tech = advScienceTech
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _SplitterSilica
			}
		}
		SETUP
		{
			name = Splitter (Spodumene)
			desc = Different electonic affinities allow separating <b>Lithium</b> and <b>Aluminium</b> from molten <b>Spodumene</b> by energy-intensive electrolysis, leaving <b>Silicates</b> slag.
			tech = advScienceTech
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _SplitterSpod
			}
		}
		SETUP
		{
			name = Splitter (Water)
			desc = Electrolysis of <b>Water</b> isn't the cheapest, but produces <b>Hydrogen</b> and <b>Oxygen</b> when no other options exist.
			tech = advScienceTech
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _SplitterH2O
			}
		}
		SETUP
		{
			name = Splitter (Methane)
			desc = Obtain <b>Hydrogen</b> gas by bubbling <b>Methane</b> through molten Tin alloy, leaving solid <b>Carbon</b> behind.
			tech = advScienceTech
			MODULE
			{
				type = ProcessController
				id_field = resource
				id_value = _SplitterMethane
			}
		}
	}
}
